apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'java-library'

//plugins {
    // Apply the java-library plugin to add support for Java Library
 //apply  id 'java-library'
//}

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.4/userguide/java_library_plugin.html
 */
 
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
    jcenter()
}

sourceSets {
	main{
		java{
			srcDir 'src/main/java'
			srcDir 'src/main/resources'
			srcDir 'src/test/java'
			srcDir 'src/test/resources'
			}
		resources {
			srcDir 'src/main/resources'
			}
		}
		functionalTest {
		java.srcDir file('src/test/java')
		resources.srcDir file('src/test/resources')
		compileClasspath = sourceSets.main.output + configurations.testRuntime
		runtimeClasspath = output + compileClasspath
		}
	}
			
dependencies {
    
    // Dependencies
	compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.59'
	compile group: 'org.testng', name: 'testng', version: '6.14.3'
	//compile group: 'au.com.bytecode', name: 'opencsv', version: '2.4'
	compile group: 'com.opencsv', name: 'opencsv', version: '4.1'
	compile group: 'net.sourceforge.javacsv', name: 'javacsv', version: '2.0'
}

//test {
  //  useTestNG {
    //    suites "src/main/resources/testng.xml"
//  }
//}
	task webTest( type:Test) {
	useTestNG() {
	//set testNG output directory
		testLogging.showStandardStreams = true
		outputDirectory = file("$project.buildDir/testNGOutput")
		useDefaultListeners = true
		configFailurePolicy "continue"
		excludeGroups "$excludeGroups"
		suites '/src/main/resources/testng.xml'
		}
		classpath = sourceSets.functionalTest.runtimeClasspath
}
